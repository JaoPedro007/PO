/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import dao.DepartamentoDao;
import dao.UsuarioDao;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.DepartamentoModelo;
import modelo.UsuarioModelo;

/**
 *
 * @author João Pedro
 */
public class Departamento extends javax.swing.JInternalFrame {

    /**
     * Creates new form Departamentos
     */
    public Departamento() {
        initComponents();
    }
    private DepartamentoDao departamentoDao = new DepartamentoDao();
    private DepartamentoModelo departamentoSelecionado;
    private List<DepartamentoModelo> departamentos;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btn_cadastrar = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_salvar = new javax.swing.JButton();
        tf_buscar = new javax.swing.JTextField();
        btn_cancelar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabela_departamento = new javax.swing.JTable();
        btn_buscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tf_nome = new javax.swing.JTextField();
        tf_descricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jLabel2.setText("Nome");

        btn_cadastrar.setText("Cadastrar");
        btn_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastrarActionPerformed(evt);
            }
        });

        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        btn_editar.setText("Alterar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        tabela_departamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Descrição"
            }
        ));
        jScrollPane3.setViewportView(tabela_departamento);

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel1.setText("Departamentos");

        jLabel3.setText("Descrição");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_cadastrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_excluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_editar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_salvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_cancelar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_buscar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cadastrar)
                    .addComponent(btn_excluir)
                    .addComponent(btn_editar)
                    .addComponent(btn_salvar)
                    .addComponent(btn_cancelar))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastrarActionPerformed
        String nome = tf_nome.getText();
        String descricao = tf_descricao.getText();

        DepartamentoModelo departamento = new DepartamentoModelo(nome, descricao);

        try {
            departamentoDao.cadastrarDepartamento(departamento);
            JOptionPane.showMessageDialog(null, "Departamento cadastrado com sucesso");
            tf_nome.setText("");
            tf_descricao.setText("");

            atualizarTabelaDepartamento();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar o Departamento", "Erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btn_cadastrarActionPerformed

    
    
    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        int linha = tabela_departamento.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um Departamento", "Atenção", JOptionPane.WARNING_MESSAGE);
            return;
        }
        departamentoSelecionado = departamentos.get(linha);
        try {
            departamentoDao.excluirDepartamento(departamentoSelecionado.getNome());
            JOptionPane.showMessageDialog(null, "Departamento excluído");
            atualizarTabelaDepartamento();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir o departamento", "Erro", JOptionPane.ERROR);
        }
    }//GEN-LAST:event_btn_excluirActionPerformed

    
    
    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        int row = tabela_departamento.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um departamento", "Atenção", JOptionPane.WARNING_MESSAGE);
            return;
        }

        departamentoSelecionado = departamentos.get(row);
        tf_nome.setText(departamentoSelecionado.getNome());
        tf_descricao.setText(departamentoSelecionado.getDescricao());
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        String nome = tf_nome.getText();
        String descricao = tf_descricao.getText();


        if (departamentoSelecionado == null) {
            DepartamentoModelo departamentoModelo = new DepartamentoModelo(nome, descricao);
            try {
                departamentoDao.cadastrarDepartamento(departamentoModelo);
                JOptionPane.showMessageDialog(null, "Departamento cadastrado");
                limparCampos();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao salvar o Departamento", "Erro", JOptionPane.ERROR_MESSAGE);

            }

        } else {
            departamentoSelecionado.setNome(nome);
            departamentoSelecionado.setDescricao(descricao);
            try {
                System.out.println(departamentoSelecionado.toString());
                departamentoDao.editarDepartamento(departamentoSelecionado);
                JOptionPane.showMessageDialog(null, "Departamento foi editado com sucesso");
                limparCampos();
                atualizarTabelaDepartamento();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao editar o Departamento", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_btn_salvarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
           try {

            departamentos = departamentoDao.buscarDepartamento(tf_buscar.getText());
            DefaultTableModel model = (DefaultTableModel) tabela_departamento.getModel();
            model.setNumRows(0);
            for (int i = 0; i < departamentos.size(); i++) {
                DepartamentoModelo departamentoModelo = departamentos.get(i);
                model.addRow(new Object[]{departamentoModelo.getNome(), departamentoModelo.getDescricao()});
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_buscarActionPerformed
   
    
    private void limparCampos() {
        tf_nome.setText("");
        tf_descricao.setText("");

    }
    
        private void atualizarTabelaDepartamento() {
        try {
            departamentos = departamentoDao.buscarDepartamento(tf_buscar.getText());

            DefaultTableModel model = (DefaultTableModel) tabela_departamento.getModel();
            model.setNumRows(0);
            for (int i = 0; i < departamentos.size(); i++) {
                DepartamentoModelo departamentoModelo = departamentos.get(i);
                model.addRow(new Object[]{
                    departamentoModelo.getNome(),
                    departamentoModelo.getDescricao(),
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível buscar os departamentos");
        }
      }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cadastrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabela_departamento;
    private javax.swing.JTextField tf_buscar;
    private javax.swing.JTextField tf_descricao;
    private javax.swing.JTextField tf_nome;
    // End of variables declaration//GEN-END:variables
}
